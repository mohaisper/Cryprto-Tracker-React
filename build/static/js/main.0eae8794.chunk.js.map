{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.js","services/cryptoNewsApi.js","services/cryptoapi.js","components/Loader.js","components/News.js","components/Cryptocurrencies.js","components/LineChart.js","components/CryptoDetails.js","components/Homepage.js","components/Exchanges.js","components/About.js","App.js","App/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","GithubOutlined","cryptoNewsHeaders","cryptoNewsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptoNews","query","newsCategory","count","url","headers","useGetCryptoNewsQuery","cryptoApiHeaders","createRequest","cryptoApi","getCryptos","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Text","Typography","Option","Select","demoImage","News","simplified","setNewsCategory","cryptoNews","data","value","gutter","span","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","toLocaleLowerCase","coins","map","coin","name","news","xs","sm","lg","hoverable","href","target","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Cryptocurrencies","cryptosList","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","item","includes","e","currency","id","title","rank","extra","iconUrl","millify","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","settimePeriod","cryptoDetails","console","log","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","links","link","type","Homepage","globalStats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","About","App","exact","path","element","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.0eae8794.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Menu, Typography, Avatar } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MoneyCollectOutlined,\n  BulbOutlined,\n  FundOutlined,\n  MenuOutlined,\n  HomeOutlined,\n  GithubOutlined\n} from \"@ant-design/icons\";\nimport icon from \"../images/cryptocurrency.png\";\nfunction Navbar() {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(null);\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  useEffect(() => {\n    if (screenSize < 768) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\">\n          <Link to=\"/\">Cryptoverse</Link>\n        </Typography.Title>\n        <Button\n          className=\"menu-control-container\"\n          onClick={() => setActiveMenu(!activeMenu)}\n        >\n          <MenuOutlined />\n        </Button>\n      </div>\n      {activeMenu && (\n        <Menu theme=\"dark\">\n          <Menu.Item icon={<HomeOutlined />}>\n            <Link to=\"/\">Home</Link>\n          </Menu.Item>\n          <Menu.Item icon={<FundOutlined />}>\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n          </Menu.Item>\n          <Menu.Item icon={<MoneyCollectOutlined />}>\n            <Link to=\"/exchanges\">Exchanges</Link>\n          </Menu.Item>\n          <Menu.Item icon={<BulbOutlined />}>\n            <Link to=\"/news\">News</Link>\n          </Menu.Item>\n          <Menu.Item icon={<GithubOutlined />}>\n            <Link to=\"/about\">About</Link>\n          </Menu.Item> \n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default Navbar;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"8f0e4b3b43msh2a3cc5ec4c212c4p180f39jsn8a11741391f4\",\r\n};\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl,\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"8f0e4b3b43msh2a3cc5ec4c212c4p180f39jsn8a11741391f4\",\n};\nconst baseUrl = \"https://coinranking1.p.rapidapi.com/\";\n// var options = {\n//     method: 'GET',\n//     url: 'https://coinranking1.p.rapidapi.com/stats',\n//     headers: {\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n//       'x-rapidapi-key': '8f0e4b3b43msh2a3cc5ec4c212c4p180f39jsn8a11741391f4'\n//     }\n//   };\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: (count) => createRequest(`/exchanges`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) =>\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n  }),\n});\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n  useGetExchangesQuery,\n} = cryptoApi;\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"laoder\">\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoapi\";\nimport Loader from \"./Loader\";\nconst { Text, Title } = Typography;\nconst { Option } = Select;\nconst demoImage =\n  \"https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News\";\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  const { data } = useGetCryptosQuery(100);\n  if (!cryptoNews?.value) return <Loader />;\n  return (\n    <div>\n      <Row gutter={[24, 24]}>\n        {!simplified && (\n          <Col span={24}>\n            <Select\n              showSearch\n              className=\"select-news\"\n              placeholder=\"Select A Crypto\"\n              optionFilterProp=\"children\"\n              onChange={(value) => setNewsCategory(value)}\n              filterOption={(input, option) =>\n                option.children\n                  .toLowerCase()\n                  .indexOf(input.toLocaleLowerCase()) >= 0\n              }\n            >\n              <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n              {data?.data?.coins.map((coin) => (\n                <Option value={coin.name}>{coin.name}</Option>\n              ))}\n            </Select>\n          </Col>\n        )}\n        {cryptoNews.value.map((news) => (\n          <Col xs={24} sm={12} lg={8}>\n            <Card hoverable className=\"news-card\">\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n                <div className=\"news-img-container\">\n                  <Title className=\"news-title\" level={4}>\n                    {news.name}\n                  </Title>\n                  <img\n                    style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\n                    alt=\"\"\n                  />\n                </div>\n                <p>\n                  {news.description.length > 100\n                    ? `${news.description.substring(0, 100)}...`\n                    : news.description}\n                </p>\n                <div className=\"provider-container\">\n                  <div>\n                    <Avatar\n                      src={\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\n                        demoImage\n                      }\n                      alt=\"news\"\n                    />\n                    <Text className=\"provider-name\">\n                      {news.provider[0]?.name}\n                    </Text>\n                  </div>\n                  <Text>\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                  </Text>\n                </div>\n              </a>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default News;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoapi\";\nimport Loader from \"./Loader\";\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) =>\n      item.name.toLowerCase().includes(searchTerm)\n    );\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n\n  if (isFetching) return <Loader />;\n  return (\n    <div>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Crypto Currency\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={32} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price : {millify(currency.price)} </p>\n                <p>Market Cap : {millify(currency.marketCap)} </p>\n                <p>Daily Change : {millify(currency.change)}% </p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </div>\n  );\n};\n\nexport default Cryptocurrencies;\n","import React from \"react\";\r\nimport { Chart } from \"chart.js/auto\";\r\nimport { CategoryScale } from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{\" \"}\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  useGetCryptoDetailsQuery,\n  useGetCryptoHistoryQuery,\n} from \"../services/cryptoapi\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport Loader from \"./Loader\";\nimport HTMLReactParser from \"html-react-parser\";\nimport LineChart from \"./LineChart\";\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, settimePeriod] = useState(\"7d\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\n    coinId,\n    timePeriod,\n  });\n  if (isFetching) return <Loader />;\n  const cryptoDetails = data?.data?.coin;\n  console.log(cryptoDetails.price);\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All-time-high(daily avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n\n  return (\n    <Col className=\"coin-details-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p> {cryptoDetails.name} Live Price In USD </p>\n        View value statistics , Market Cap and Supply.\n      </Col>\n      <Select\n        defaultValue=\"7d\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => settimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart\n        coinHistory={coinHistory}\n        currentPrice={millify(cryptoDetails.price)}\n        coinName={cryptoDetails.name}\n      />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-detailes-headin\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <a>\n              An overview showing the statistics of {cryptoDetails.name}, such\n              as the base and quote currency, the rank, and trading volume.\n            </a>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-detailes-headin\">\n              Other Statistics\n            </Title>\n            <a>An overview showing the statistics of All Crypto Currencies</a>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-name\">\n        <Row className=\"coin-desc\">\n          /\n          <Title level={3} className=\"coin-details-heading\">\n            What is {cryptoDetails.name}?\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreffer\">\n                {link.name}\n              </a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Typography, Row, Col, Statistic } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useGetCryptosQuery } from \"../services/cryptoapi\";\nimport { Cryptocurrencies, News } from \".\";\nimport Loader from \"./Loader\";\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n  if (isFetching) return <Loader />;\n  return (\n    <div className=\"heading\">\n      <Title level={2}>Global Crypto Stats</Title>\n      <Row>\n        <Col span={12}>\n          <Statistic title=\"Total Cryptocurrencis\" value={globalStats.total} />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Exchanges\"\n            value={millify(globalStats.totalExchanges)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Market Cap\"\n            value={millify(globalStats.totalMarketCap)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total 24h Volume\"\n            value={millify(globalStats.total24hVolume)}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Total Markets\"\n            value={millify(globalStats.totalMarkets)}\n          />\n        </Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Top 10 Cryptocurrencies In The World{\" \"}\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/cryptocurrencies\">Show More</Link>\n        </Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">\n          Latest Crypto News\n        </Title>\n        <Title level={3} className=\"show-more\">\n          <Link to=\"/news\">Show More</Link>\n        </Title>\n      </div>\n      <News simplified />\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\nimport millify from \"millify\";\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\nimport HTMLReactParser from \"html-react-parser\";\n\nimport { useGetExchangesQuery } from \"../services/cryptoapi\";\nimport Loader from \"./Loader\";\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange) => (\n          <Col span={24}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text>\n                        <strong>{exchange.rank}.</strong>\n                      </Text>\n                      <Avatar\n                        className=\"exchange-image\"\n                        src={exchange.iconUrl}\n                      />\n                      <Text>\n                        <strong>{exchange.name}</strong>\n                      </Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                }\n              >\n                {HTMLReactParser(exchange.description || \"\")}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","import React from 'react';\nimport { Col,Typography} from 'antd';\nimport {GithubOutlined } from '@ant-design/icons'\nconst { Title,Text } = Typography;\nconst About = () => {\n    return (\n        <div>\n            <Title level={4}>\n                <Col>\n                <Text>\n                    Hi , My Name Is Mohammed Isber , \n                    I'm The Coder OF This Project <br/>\n                    <a>And There Is Some More Informations About Me And The Project</a>\n                </Text>\n                </Col>\n            </Title>\n            <Title level={5}>\n                <Col>\n                <Text>\n                    This Project Is from <a>javascript mastery</a> On Youtube <br/>\n                    The Project Took From Me About 5d in a Row , <br/>\n                </Text>\n                <div className=\"alert\">This Is Not A Copied Project , \n                    You can See This In The Code \n                </div>\n                <br/>\n                <p>I've Learnt Alot of This tutorial it So Useful and Helped Me To udnerstand Alot Of React princples </p>\n                <p>Basicly I'm A Fron-end Developer With A Good Knowledg Of HTML/CSS/JS , </p>\n                <p>And This Is my First Project With React.Js</p>\n                <br/>\n                <p>This Project Is using <a>Rapid Api</a> as A basic Api Services</p>\n                <p>I used Coinranking Api For The Cryptos Currencies And Thier Details </p>\n                <p>and Bing News for the News Api  </p>\n                <p>And I've Used AntD For The Styled Components Its Very Useful </p>\n                <p>So If You Like This Project You Can Visit My GitHub Account And See My Other Projects </p>\n                <p><a href=\"https://github.com/mohaisper\" target=\"_blank\"><GithubOutlined /> mohaisper</a> GitHub Account</p>\n                </Col>\n            </Title>\n        </div>\n    )\n}\n\nexport default About\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\n\nimport {\n  Exchanges,\n  Homepage,\n  News,\n  Cryptocurrencies,\n  CryptoDetails,\n  Navbar,\n} from \"./components\";\nimport \"./AppS.css\";\nimport About from \"./components/About\";\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Routes>\n            <Route exact path=\"/\" element={<Homepage />} />\n            <Route exact path=\"/exchanges\" element={<Exchanges />} />\n            <Route\n              exact\n              path=\"/cryptocurrencies\"\n              element={<Cryptocurrencies />}\n            />\n            <Route exact path=\"/crypto/:coinId\" element={<CryptoDetails />} />\n            <Route exact path=\"/news\" element={<News />} />\n            <Route exact path=\"/about\" element={<About />} />\n          </Routes>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title\n          level={5}\n          style={{ color: \"white\", textAlign: \"center\" }}\n        >\n          Copyright © 2021\n          <Link to=\"/\">Cryptoverse Inc.</Link> <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { cryptoApi } from \"../services/cryptoapi\";\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nimport \"antd/dist/antd.css\";\nimport store from \"./App/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}